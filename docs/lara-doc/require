#) Accessing The Request

	public function store(Request $request)
	{
        	$name = $request->input('name');
        }

#) Accessing The Request Via Route Closures

	Route::get('/', function (Request $request) {
	});

#) Retrieving The Request Path

	The path method returns the request's path information.
	So, if the incoming request is targeted at  http://domain.com/foo/bar, 
	the path method will return foo/bar:

        $uri = $request->path();
	

#) is method

	if ($request->is('admin/*')) {
	}

#) Retrieving The Request URL


	// Without Query String...
	$url = $request->url();

	// With Query String...
	$url = $request->fullUrl();

#) Retrieving The Request Method

	$method = $request->method();

	if ($request->isMethod('post')) {
	}

#) Retrieving All Input Data

	$input = $request->all();

#) default value for request 

	You may pass a default value as the second argument to the input method.
	This value will be returned if the requested input value is not present on the request:

	$name = $request->input('name', 'Sally');

#) has() method (like isset())

	The has method returns true if the value is present and is not an empty string:

	e.g.

		if ($request->has('name')) {
		}

		if ($request->has(['name', 'email'])) {
			
		}

#) Retrieving Old Input

	To retrieve flashed input from the previous request, use the old method on the Request instance.
	The old method will pull the previously flashed input data from the session:

		$username = $request->old('username');


	Laravel also provides a global old helper.
	If you are displaying old input within a Blade template, it is more convenient to use the old helper.
	If no old input exists for the given field, null will be returned:

		<input type="text" name="username" value="{{ old('username') }}">







